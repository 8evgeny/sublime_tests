id — выводит информацию об идентичности пользователя.
chmod — изменяет режим доступа к файлу.
umask — определяет разрешения доступа к файлам по умолчанию.
su — запускает командную оболочку от имени другого пользователя.
sudo — выполняет команду от имени другого пользователя.
chown — изменяет владельца файла.
chgrp — изменяет группу файла.
passwd — изменяет пароль пользователя.

Учетные записи пользователей хранятся в файле /etc/passwd, 
а информация о группах — в файле /etc/group

Таблица 9.1. Типы файлов

- Обычный файл
d Каталог
l Символическая ссылка. Обратите внимание, что для символических ссылок 
все остальные атрибуты имеют значение rwxrwxrwx и не отражают действи-
тельные права доступа. Фактические права доступа к файлу определяются 
атрибутами самого файла, на который указывает символическая ссылка
c Специальный файл символьного устройства. Файлы этого типа соответствуют устройствам, таким как терминал или модем, которые обрабатывают данные как потоки байтов
b Специальный файл блочного устройства. Файлы этого типа соответствуют устройствам, таким как  привод жесткого диска или CD-ROM, которые обрабатывают данные блоками

Таблица 9.4. Режимы доступа к файлу в двоичном и восьмеричном представлениях

0 000 ---
1 001 --x
2 010 -w-
3 011 -wx
4 100 r--
5 101 r-x
6 110 rw-
7 111 rwx

[me@linuxbox ~]$ > foo.txt
[me@linuxbox ~]$ ls -l foo.txt
-rw-rw-r-- 1 me me 0 2012-03-06 14:52 foo.txt
[me@linuxbox ~]$ chmod 600 foo.txt
[me@linuxbox ~]$ ls -l foo.txt
-rw------- 1 me me 0 2012-03-06 14:52 foo.txt
Передав аргумент 600, мы установили права для владельца, позволяющие ему читать данные из файла и записывать их в файл, и при этом отобрали все права у группы и остального мира.

Символическое представление
Команда chmod поддерживает также символическую форму определения режимов доступа к файлу

Таблица 9.5. Символическая форма записи аргументов команды chmod

u Сокращенно от user (пользователь), означает владельца файла или каталога 
g Группа
o Сокращенно от other (другие, остальные), означает весь остальной мир
a Сокращенно от all (все); комбинация из всех трех символов: u , g и o

Если не указан ни один символ, предполагается a (all.— все). Операцией может быть знак + , соответствующий добавлению заданных разрешений, знак - , соответствующий отъему заданных разрешений, или знак = , указывающий, что только заданные разрешения должны быть установлены, а все остальные отобраны.

Разрешения определяются символами r  w  x   s t (специальные)

Таблица 9.6. Примеры символической формы записи прав доступа к файлам

u+x Добавляет право на выполнение, но только для владельца
u-x Отнимает право на выполнение у владельца
+x Добавляет право на выполнение для владельца, группы и остального мира. Эквивалент записи a+x
o-rw Отнимает право на чтение и запись у всех, кроме владельца и группы
go=rw Устанавливает право на чтение и запись для всех, кроме владельца. Если прежде файл имел разрешение на выполнение для группы и всего мира, это право отнимается
u+x,go=rx Добавляет право на выполнение для владельца и устанавливает право на чтение и выполнение для группы и всего мира. При выполнении сразу нескольких операций с привилегиями они должны разделяться запятой

umask

[me@linuxbox ~]$ rm -f foo.txt
[me@linuxbox ~]$ umask
0002
[me@linuxbox ~]$ > foo.txt
[me@linuxbox ~]$ ls -l foo.txt
-rw-rw-r-- 1 me me 0 2012-03-06 14:53 foo.txt

[me@linuxbox ~]$ rm foo.txt
[me@linuxbox ~]$ umask 0000
[me@linuxbox ~]$ > foo.txt
[me@linuxbox ~]$ ls -l foo.txt
-rw-rw-rw- 1 me me 0 2012-03-06 14:58 foo.txt

Исходный режим доступа к файлу --- rw- rw- rw-
Маска                          000 000 000 010
Результат                      --- rw- rw- r--

В любой позиции, где в маске появляется 1, соответствующий атрибут сбрасывается. Если посмотреть на значение маски 0022, легко увидеть, что оно делает:

Исходный режим доступа к файлу --- rw- rw- rw-
Маска                          000 000 010 010
Результат                      --- rw- r-- r--

Первый пример — установка бита setuid на файл программы:
chmod u+s program
Далее — установка бита setgid на каталог:
chmod g+s dir
Наконец, установка бита sticky на каталог:
chmod +t dir

Первый атрибут — бит setuid (восьмеричное значение 4000). Если это разрешение применяется к выполняемому файлу, в качестве эффективного идентификатора пользователя для процесса устанавливается не идентификатор реального пользователя (пользователя, фактически запустившего программу), а идентификатор владельца программы. Чаще этот бит устанавливается для программ, владельцем которых является суперпользователь. Когда обычный пользователь запускает программу с установленным битом setuid и принадлежащую пользователю root, программа выполняется с эффективными привилегиями 
суперпользователя. Это дает возможность программам обращаться к файлам и каталогам, недоступным для обычного пользователя. Очевидно, что из-за возникающих проблем безопасности число таких программ в системе должно быть сведено к минимуму.
Второй редко используемый атрибут — бит setgid (восьмеричное значение 2000). По аналогии с битом setuid он устанавливает эффективный идентификатор группы для процесса, выбирая вместо идентификатора группы реального пользователя группу владельца файла. Если установить бит setgid для каталога, вновь создаваемые файлы в этом каталоге будут принадлежать группе владельца каталога, а не группе владельца 
файла, создавшего его. Это разрешение может пригодиться для установки на каталоги, содержимое которых должно быть доступно всем членам основной группы владельца каталога, независимо от принадлежности к основной группе владельца файла.
Третий атрибут называется битом sticky (восьмеричное значение 1000). Это пережиток, оставшийся от первых версий Unix, которые предоставляли возможность пометить выполняемый файл как «невытесняемый». Linux игнорирует бит sticky у файлов, но если установить его для каталога, он не позволит пользователю удалять или переименовывать файлы, если только пользователь не является владельцем каталога, владельцем файла или суперпользователем. Это разрешение часто применяется для управления доступом к общим каталогам, таким как /tmp.

su — запуск командной оболочки с подстановкой идентификаторов пользователя и группы
Команда su используется для запуска нового сеанса работы с командной оболочкой от имени другого пользователя. Команда имеет следующий синтаксис:
su [-[l]] [пользователь]

[me@linuxbox ~]$ su -
Password:
[root@linuxbox ~]#

С помощью su можно так же просто выполнить единственную команду, не запуская новый интерактивный сеанс:
su -c 'команда'

[me@linuxbox ~]$ su -c 'ls -l /root/*'
Пароль:
-rw------- 1 root root 754 2011-08-11 03:19 /root/anaconda-ks.cfg
/root/Mail:
итого 0
[me@linuxbox ~]$

Администратор может определить порядок использования sudo обычными пользователями, ограничив возможность запуска команд от имени другого пользователя (обычно суперпользователя). В частности, пользователю может быть разрешен доступ к одним командам и запрещен к другим. Еще одно важное отличие состоит в том, что sudo не требует ввода пароля суперпользователя. Для аутентификации в команде sudo пользователь должен ввести свой пароль.

Чтобы увидеть, какие привилегии дает команда sudo, вызовите ее с параметром -l:
[me@linuxbox ~]$ sudo -l
User me may run the following commands on this host:
 (ALL) ALL

 chown — изменение владельца и группы файла
 chown [владелец][:[группа]] файл...

 Таблица 9.7. Примеры аргументов команды chown

bob Изменит принадлежность файла, назначив владельцем пользователя bob
bob:users Изменит принадлежность файла, назначив владельцем пользователя bob и группу users
:admins Изменит принадлежность файла, назначив группу admins
bob: Изменит принадлежность файла, назначив владельцем пользователя bob и группу этого пользователя

[janet@linuxbox ~]$ sudo cp myfile.txt ~tony
Password:
[janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt
-rw-r--r-- 1 root root 8031 2012-03-20 14:30 /home/tony/myfile.txt
[janet@linuxbox ~]$ sudo chown tony: ~tony/myfile.txt
[janet@linuxbox ~]$ sudo ls -l ~tony/myfile.txt
-rw-r--r-- 1 tony tony 8031 2012-03-20 14:30 /home/tony/myfile.txt

Для установки и изменения пароля используется команда passwd. Она имеет следующий синтаксис:
passwd [пользователь]

[me@linuxbox ~]$ passwd
Смена пароля для me.
(текущий) пароль UNIX:
Введите новый пароль UNIX:

При наличии привилегий суперпользователя можно передать команде passwd аргумент с именем пользователя, чтобы установить пароль для этого пользователя.
Суперпользователю доступна также возможность блокировки учетных записей,
установки времени действия пароля и многое другое. За подробностями обращайтесь к странице справочного руководства (man) для команды passwd.
