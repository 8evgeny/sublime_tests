for i in {1..100}; do echo "(${RANDOM:0:3}) ${RANDOM:0:3}-${RANDOM:0:4}" >> phonelist.txt; done
grep -Ev '^\([0-9]{3}\) [0-9]{3}-[0-9]{4}$' phonelist.txt
grep -E '^\([0-9]{3}\) [0-9]{3}-[0-9]{4}$' phonelist.txt >> phonelist_true.txt 

find . -regex '.*[^-_./0-9a-zA-Z].*'

cd /usr/share/man/man1
zgrep -El 'regex|regular expression' *.gz
Результатом этой команды будет список файлов, содержащих строку regex или regular expression 

Команда set при вызове без параметров и аргументов выводит переменные обоих типов — командной оболочки и окружения, — а также все объявленные функции командной оболочки.
set | less

echo "lowercase letters" | tr a-z A-Z
LOWERCASE LETTERS

echo "lowercase letters" | tr [:lower:] A
AAAAAAAAA AAAAAAA

tr -d '\r' < файл_dos > файл_unix

шифрование текста по алгоритму ROT13
echo "secret text" | tr a-zA-Z n-za-mN-ZA-M
frperg grkg
Повторное применение той же процедуры приводит к обратному преобразованию:
echo "frperg grkg" | tr a-zA-Z n-za-mN-ZA-M
secret text

При вызове с параметром -s коман­да tr «сжимает» (squeeze), или удаляет повторяющиеся экземпляры символов:
echo "aaabbbccc" | tr -s ab
abccc

echo "front" | sed 's/front/back/'
back
Команды sed начинаются с единственной буквы.

Ту же самую команду можно было
бы записать иначе:
echo "front" | sed 's_front_back_'
back
echo "front" | sed '2s/front/back/'
front
Теперь, как видите, редактирование не было выполнено, потому что во входном
потоке отсутствует строка с номером 2.




