Перемещение курсора

Таблица 8.1. Команды перемещения курсора

CTRL+A Перемещает курсор в начало строки
CTRL+E Перемещает курсор в конец строки
CTRL+F Перемещает курсор на один символ вперед; действует так же, как кла-
виша со стрелкой вправо
CTRL+B Перемещает курсор на один символ назад; действует так же, как клави-
ша со стрелкой влево
ALT+F Перемещает курсор на одно слово вперед
ALT+B Перемещает курсор на одно слово назад
CTRL+L Очищает экран и устанавливает курсор в левый верхний угол. То же 
самое делает команда clear

Таблица 8.2. Команды редактирования текста

CTRL+D Удаляет символ в позиции курсора
CTRL+T Меняет местами два символа — в позиции курсора и предшествующий ему
ALT+T Меняет местами два слова — в позиции курсора и предшествующий ему
ALT+L Переводит в нижний регистр символы, начиная с символа в позиции курсора и до конца слова
ALT+U Переводит в верхний регистр символы, начиная с символа в позиции курсора и до конца слова

Таблица 8.3. Команды вырезания и вставки

CTRL+K Удаляет символы от позиции курсора до конца строки
CTRL+U Удаляет символы от позиции курсора до начала строки
ALT+D Удаляет символы от позиции курсора до конца текущего слова
ALT+BACKSPACE Удаляет символы от позиции курсора до начала текущего слова. Если 
курсор находится в начале слова, удаляется предшествующее слово
CTRL+Y Извлекает текст из кольцевого буфера удалений и вставляет его в позицию курсора

Просмотреть содержимое истории можно в любой момент с помощью команды:
[me@linuxbox ~]$ history | less

А теперь представим, что среди результатов нужно выбрать запись с интересующей вас командой:
88 ls -l /usr/bin > ls-output.txt
Здесь число 88.— это порядковый номер записи команды в списке истории. Зная это число, можно воспользоваться еще одной разновидностью подстановки, которая называется подстановкой записей истории 
(history expansion). Для этого введите:
[me@linuxbox ~]$ !88

bash также дает возможность выполнять поступательный поиск в списке истории.
Это означает, что bash может выполнять поиск в списке истории по мере ввода
символов, уточняя результаты с вводом каждого нового символа. Чтобы запустить поступательный поиск, нажмите комбинацию CTRL+R введите искомый текст. Закончив поиск, нажмите ENTER, чтобы выполнить команду, или CTRL+J, чтобы скопировать запись из списка истории в текущую командную строку.
Чтобы найти следующее вхождение текста (переместиться «вверх» по списку истории),
нажмите CTRL+R еще раз. Чтобы завершить поиск, нажмите CTRL+G или CTRL+C.

Таблица 8.5. Команды для работы с историей

CTRL+ P Переход к предыдущей записи в истории. Действует так же, как клавиша со стрелкой вверх
CTRL+ N Переход к следующей записи в истории. Действует так же, как клавиша со стрелкой вниз
ALT+ < Переход в начало (к первой записи) списка истории
ALT+ > Переход в конец (к последней записи) списка истории
CTRL+ R Инкрементальный поиск в обратном порядке. Поиск выполняется поступательно, от текущей записи вверх по списку истории
ALT+ P Поиск в обратном порядке, не инкрементальный. При использовании этого вида поиска введите искомую строку и нажмите ENTER, и только после этого будет выполнен фактический поиск
ALT+ N Поиск в прямом порядке, не поступательный
CTRL+ O Выполнить текущую команду в списке истории и перейти к следующей. Эту комбинацию удобно использовать, если требуется повторно выполнить последовательность команд из списка истории

Механизм подстановки записей истории поддерживает также другие комбинации,но эта тема становится слишком запутанной, и мы не станем перегружать себя лишней информацией. Желающие смогут обратиться к странице справочного руководства ( man) для bash, в разделе «HISTORY EXPANSION». Загляните туда!

Таблица 8.6. Команды механизма подстановки записей истории

!! Повторяет последнюю команду. Проще, пожалуй, нажать клавишу со стрелкой вверх и ENTER
! число Повторяет команду из записи с указанным номером
! строка Повторяет последнюю команду в списке истории, начинающуюся с указанной строки
!?строка Повторяет последнюю команду в списке истории, содержащую указанную строку

SCRIPT
В дополнение к истории команд в bash большинство дистрибутивов Linux включают 
программу script, которую можно использовать для записи в файлы целых сеансов 
работы с командной оболочкой. Базовый синтаксис команды:
script [файл]
где файл — это имя файла для записи. Если файл не будет указан, сохранение сеанса 
будет произведено в файл typescript. Полное описание параметров и возможностей 
программы можно найти на странице справочного руководства (man) для script.