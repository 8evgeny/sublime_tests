Двойные кавычки
Первый тип экранирования,  — двойные кавычки. Если заключить текст в двойные кавычки, все специальные символы потеряют свое специальное значение и будут интерпретироваться как обычные символы. Исключение составляют: $ (знак доллара), \ (обратный слеш) и ` (обратный апостроф).

Запомните: подстановка параметров, подстановка значений арифметических выражений и подстановка команд все еще выполняются в двойных кавычках:

[jhon@jhon-pc ~]$ echo "$USER $((2+2)) $(cal)"
jhon 4      Ноябрь 2020    
Пн Вт Ср Чт Пт Сб Вс
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30                  
[jhon@jhon-pc ~]$ 


[jhon@jhon-pc ~]$ echo $USER $((2+2)) $(cal)
jhon 4 Ноябрь 2020 Пн Вт Ср Чт Пт Сб Вс 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
[jhon@jhon-pc ~]$ 

Одиночные кавычки
Если вам требуется подавить все подстановки, используйте одиночные кавычки.

Иногда бывает необходимо экранировать только один символ. Для этого достаточно добавить перед символом обратный слеш, который в данном случае называется экранирующим символом (escape character). Часто этот прием используется в двойных кавычках, чтобы выборочно предотвратить подстановку.

[me@linuxbox ~]$ echo "Баланс счета пользователя $USER: \$5.00"
Баланс счета пользователя me: $5.00

Чтобы включить
специальный символ в имя файла, его достаточно экранировать, как показано ниже:
[me@linuxbox ~]$ mv bad\&filename good_filename

Таблица 7.2. Управляющие последовательности

\a Звонок («предупреждение» — заставляет компьютер подать звуковой сигнал)
\b Забой (backspace)
\n Новая строка (в Unix-подобных системах этот символ выполняет перевод строки)
\r Возврат каретки
\t Табуляция

Параметр -e команды echo включает интерпретацию управляющих последовательностей. Их можно также заключать в конструкцию $' '.