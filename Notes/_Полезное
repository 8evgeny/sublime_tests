grep -rnw . -e "tick1sec"   Поиск в файлах

Поиск в текущей директории
grep -r "#include <chrono>" .

вывести переменные CMake:
get_cmake_property(_variableNames VARIABLES)
list (SORT _variableNames)
foreach (_variableName ${_variableNames})
    message(STATUS "${_variableName}=${${_variableName}}")
endforeach()

Установить альтернативную версию компилятора (если в системе 2)
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 60 --slave /usr/bin/g++ g++ /usr/bin/g++-11

Сборка Qt

git clone git://code.qt.io/qt/qt5.git .
git switch dev  (6.6 ...)
./init-repository --module-subset=qtbase,qtshadertools,qtdeclarative,qtdoc,qthttpserver,qtmultimedia,qtserialport,qttools,qtwebsockets
perl init-repository
$ mkdir qt6-build
$ cd qt6-build
$ ../configure -prefix /home/evg/QT6_09_2023
$ cmake --build . --parallel 4
$ sudo cmake --install .

PATH=/usr/local/Qt-6.7.0/bin:$PATH
$ export PATH

Деплой Qt приложений
https://evileg.com/ru/post/488/


sudo pacman -Sy endeavouros-keyring

sudo vmhgfs-fuse .host: /mnt/hgfs -o allow_other -o uid=1000
sudo vmhgfs-fuse .host: ~/shared -o allow_other -o uid=1000
sudo nano /etc/fstab
.host: /mnt/hgfs fuse.vmhgfs-fuse defaults,allow_other,uid=1000,nonempty 0 0

Деплой конфигуратора
windeployqt.exe --qmldir C:\Qt5\5.15.2\mingw81_64\qml C:\Users\Professional\Desktop\2022_12\configurator.exe
windeployqt.exe C:\Users\Professional\Desktop\11\json_parser.exe

Portable C and C++ Development Kit for x64 Windows
https://github.com/skeeto/w64devkit
set PATH=c:\path\C:\w64devkit-master\w64devkit\bin;%PATH%
set PATH=C:\Program Files\7-Zip;%PATH%

CRC32 папки - и затем greep
C:\Program Files\7-Zip>7z h -scrc C:\Users\Professional\Documents\GIT1\15_Документы_НИОКР\temp_arсhive\ГРЛМ.301561.027СБ
7z h -scrc /home/evg/SOFT/Github/GIT/15_Документы_НИОКР/temp_arсhive/ГРЛМ.301561.027СБ/Contents | grep "CRC32  for data:"


/* сохраняет вывод консольной команды из system */
main()
{
    char buf[BUFSIZ];
    FILE *ptr;

    if ((ptr = popen(CMD.c_str(), "r")) != NULL)
            while (fgets(buf, BUFSIZ, ptr) != NULL)
                    (void) printf("%s", buf);
                (void) pclose(ptr);
    string tmp{buf};
    string result = tmp.substr(30, 9);
}

Включить путь в PATH из кода
    char buf1[2048];
    std::size_t bufsize = 2048;
    int e = getenv_s(&bufsize,buf1,bufsize,"PATH");
    if (e) {
        std::cerr << "`getenv_s` failed, returned " << e << '\n';
        exit(EXIT_FAILURE);
    }
    std::string env_path = buf1;
//    std::cout << "In main process, `PATH`=" << env_path << std::endl;
    env_path += ";C:\\Program Files\\7-Zip";
    e = _putenv_s("PATH",env_path.c_str());
    if (e) {
        std::cerr << "`_putenv_s` failed, returned " << e << std::endl;
        exit(EXIT_FAILURE);
    }
    std::cout << std::endl;
//    e = std::system("echo \"In child process `PATH`=%PATH%\"");
    if (e) {
        std::cerr << "`std::system` failed, returned " << e << std::endl;
        exit(EXIT_FAILURE);
    }






