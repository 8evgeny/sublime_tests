Команда ip имеет следующий синтаксис:

ip [OPTION] OBJECT {COMMAND | help}
К объектам OBJECT (или подкомандам), которые вы будете использовать чаще всего, относятся:

link (l) - используется для отображения и изменения сетевых интерфейсов
address (addr/a) - используется для отображения и изменения адресов протокола (IP, IPv6)
route (r) - используется для отображения и изменения таблицы маршрутизации
neigh (n) - используется для отображения и управления соседними объектами (таблица ARP)
Они могут использоваться как в полной, так и сокращенной форме.

Есть много других доступных объектов и команд. Чтобы увидеть полный список, введите следующую команду:
ip help

Предупреждение: по умолчанию система не сохраняет изменения перманентно. После перезапуска Linux-сервера вновь измененное состояние будет потеряно. Есть два способа сделать ваши настройки постоянными: добавить команды в сценарий запуска или отредактировать дистрибутивные файлы конфигурации.

Вы можете получить список всех параметров команды link, набрав:
ip link help

Чтобы увидеть информацию канального уровня обо всех доступных устройствах (у которых загружен драйвер), используйте команду:
ip link show

Чтобы просмотреть статистику по всем сетевым интерфейсам (такие детали, как переданные или отброшенные пакеты или даже ошибки), используйте:
ip -s link

Если вам нужно больше подробностей, добавьте еще -s в синтаксис:
ip -s -s link ls [interface]

Чтобы увидеть список только работающих интерфейсов, используйте:
ip link ls up

Если вы хотите включить сетевой интерфейс, используйте команду:
ip link set [interface] up
Отключите интерфейс, введя:
ip link set [interface] down

Команда ip link позволяет вам изменять очередь передачи, ускоряя или замедляя интерфейсы в соответствии с вашими потребностями и аппаратными возможностями.

ip link set txqueuelen [number] dev [interface]
Вы можете установить MTU (Maximum Transmission Unit) для улучшения производительности сети:

ip link set mtu [number] dev [interface]
Чтобы узнать все опции команды link, наберите:

ip link help

МОНИТОРИНГ И УПРАВЛЕНИЕ IP-АДРЕСАМИ
Узнайте все команды address, набрав следующее:

ip addr help

Выведите все устройства с помощью следующей команды:
ip a
Чтобы вывести список всех сетевых интерфейсов и связанных IP-адресов, используйте команду:
ip a show

Вы также можете увидеть информацию об отдельной сети:

ip a show dev [interface]
Чтобы получить список всех IPv4 адресов, используйте:

ip -4 addr
Чтобы получить список всех IPv6 адресов, используйте:

ip -6 addr
КАК ДОБАВИТЬ IP-АДРЕС В LINUX
Добавьте IP-адрес в интерфейс с помощью команды:

ip a a [ip_address] dev [interface]

Если вам нужно добавить широковещательный (broadcast) адрес для интерфейса, используйте команду:
ip addr add brd [ip_address] dev [interface]
Чтобы удалить IP-адрес из интерфейса, выполните следующие действия.
ip addr del [ip_address] dev [interface]

УПРАВЛЕНИЕ И ОТОБРАЖЕНИЕ ТАБЛИЦЫ IP-МАРШРУТИЗАЦИИ
Просмотрите полный список команд ip routeс помощью следующей команды:

ip route help

Для просмотра всех записей в таблице маршрутизации используйте одну из следующих команд:

ip r
ip route list

Чтобы просмотреть маршрутизацию для отдельной сети, используйте следующий синтаксис:
ip route list [ip_address]

Чтобы добавить новую запись в таблицу маршрутизации, введите команду:
ip route add [ip_address] dev [interface]
Или вы можете добавить новый маршрут через шлюз, набрав:
ip route add [ip_address] via [gateway_IP]

Также команда позволяет добавить маршрут для всех адресов через локальный шлюз, добавив параметр default:
ip route add default [ip_address] dev [device]
ip route add default [network/mask] via [gateway_IP]

Чтобы удалить существующую запись в таблице маршрутизации, используйте команды:
ip route del [ip_address]
ip route del default
ip route del [ip_address] dev [interface]

ОТОБРАЖЕНИЕ И ИЗМЕНЕНИЕ IP-ЗАПИСЕЙ СОСЕДЕЙ
При помощи команды ip neigh можно манипулировать таблицами ARP (Address Resolution Protocol). Это аналог команды arp
Для получения полного списка всех параметров команды neigh используйте:
ip neigh help

Чтобы отобразить таблицы соседей, используйте следующую команду:
ip neigh show   (ip n)
Выходные данные показывают MAC-адреса устройств, которые являются частью системы, и их состояние. Состояние устройства может быть:

REACHABLE - означает валидную, достижимую запись до истечения таймаута.
PERMANENT - означает постоянную запись, которую может удалить только администратор
STALE - означает действительную, но недоступную запись
DELAY - означает, что ядро все еще ожидает проверки из устаревшей записи

Добавьте новую запись в таблицу с помощью команды:
ip n a [ip_address] dev [interface]
Или удалите существующую запись ARP:
ip n d [ip_address] dev [interface]




ip [опции] объект команда [параметры]

опции - это глобальные настройки, которые сказываются на работе всей утилиты независимо от других аргументов, их указывать необязательно.

объект - объект или устройство, с которым будем работать или о котором будем узнавать информацию.
команды - какое-либо действие с объектом.
параметры - само собой, командам иногда нужно передавать параметры, они передаются в этом пункте.

ОПЦИИ
Поддерживаются такие опции для настройки сети в lInux:

-v - только вывод информации об утилите и ее версии
-s - включает вывод статистической информации
-f - позволяет указать протокол, с которым нужно работать, если протокол не указан, то берется на основе параметров команды. Опция f должна принимать одно из значений: bridge, dnet, inet, inet6, ipx или link. По умолчанию используется inet, link - означает отсутствие протокола.
-o - выводить каждую запись с новой строки
-r - выполнять резолвинг и выводить символические имена хостов
Все остальные опции - ярлыки опции -f:
-4 - ярлык для -f inet
-6 - -f inet6
-B - -f bridge
-0 - -f link

ОБЪЕКТЫ
Теперь давайте рассмотрим самые важные объекты.

address - сетевой адрес на устройстве
link- физическое сетевое устройство
monitor - мониторинг состояния устройств
neigh - ARP
route - управление маршрутизацией
rule - правила маршрутизации
tunnel - настройка туннелирования
Конечно, это не все объекты которые поддерживает команда ip linux, но на первое время вам хватит. Во время ввода имя объекта может быть сокращено до одной буквы. При неоднозначности используется алфавитный порядок. Например, ip a show, расшифровывается как ip address show. Тогда как в ip r show, r - означает route.

КОМАНДЫ
Теперь рассмотрим доступные команды, с помощью которых может быть выполнена настройка сети linux. Вот они: 
add 
change 
del или delete 
flush
get 
list или show 
monitor 
replace
restore
save 
set 
update.
Если команда не задана, по умолчанию используется show (показать).

Здесь тоже поддерживается сокращение и в большинстве случаев для выполнения нужного действия достаточно нескольких символов. Но алфавитный порядок соблюдается не всегда. Например, ip a s, означает ip address show, а не ip address set, к сожалению.

ПАРАМЕТРЫ
Параметры зависят от объекта и указанной команды. Рассмотрим самые основные:

dev имя_устройства - сетевое устройство;
up - включить;
down - выключить;
lladdr - MAC - адрес;
initcwnd - размер окна перегрузки TCP при инициализации;
window - размер окна TCP;
cwnd - размер окна перегрузки TCP;
type - тип;
via - подключиться к роутеру;
default - маршрут по умолчанию;
blackhole - маршрут "черная дыра" - отбрасывать пакеты и не посылать ICMP сообщения о недоступности;
prohibit - маршрут "запрета" - отбрасывать пакеты и возвращать ICMP сообщения о запрете доступа;
unreachable - маршрут "недостижимый" - отбрасывать пакеты и посылать ICMP пакеты о недостижимости узла.

IP LINK
Утилита ip в Linux с параметром linux позволяет управлять состоянием сетевых интерфейсов и просматривать информацию о них.
ip link show - отобразить состояние всех сетевых интерфейсов
ip l sh - то же самое
ip ll - то же самое
ip l - то же самое
ip link show eth0 - отобразить состояние eth0
ip link list up - отобразить статус всех включенных интерфейсов
ip link set eth1 up - включить eth1
ip link set eth1 down выключить eth1

IP NEIGBOUR
Объект neigbour используется для управления ARP таблицами.
ip neigh show - показать все записи ARP
ip n sh - то же самое
ip n l - то же самое
ip n - то же самое
ip neigh show dev eth0 - посмотреть все ARP записи для eth0
ip neigh flush - удалить все ARP записи
ip ne fl dev eth0 - удалить все ARP записи для eth0
ip nei add 1.1.1.13 lladdr AA:BB:CC:DD:EE:FF dev eth0 - добавить ARP запись для определенного IP адреса.
ip n del 1.1.1.13 dev eth0 - удалить все записи для указанного адреса

IP ADDRESS
Важно заметить, что вторичные ip адреса не используются в качестве исходящих адресов для отправки пакетов.
ip address show - показать все ip адреса и их интерфейсы
ip a sh - то же самое
ip a list - то же самое
ip a - то же самое
ip a l permanent - отобразить только статические ip адреса
ip a l dynamic - отобразить только динамические ip адреса
ip addr add 1.1.1.13/24 dev eth0 - установить ip адрес для интерфейса eth0
ip addr del 1.1.1.13/24 dev eth0 - удалить ip адрес интерфейса eth0
ip add flush dev eth0 - удалить все ip адреса интерфейса eth0

IP ROUTE
Утилита ip в Linux позволяет не только устанавливать ip адреса, но и настраивать маршруты. По умолчанию в Linux используется таблица маршрутизации 254, вы также можете иметь дело с таблицей 255, которую не следует изменять, а также 253, в которой хранятся маршруты по умолчанию.
ip r sh показать все маршруты в таблице маршрутизации
ip route show table nnn - отобразить все маршруты из таблицы 255
ip route get 10.10.20.0/24 - отобразить маршрут к этой сети
ip route get 10.10.20.0/24 from 192.168.12.9 - отобразить маршрут к этой сети от указного интерфейса.
ip route add 10.10.20.0/24 via 192.168.50.100 - создать маршрут
ip route delete 10.10.20.0/24 - удалить маршрут.
ip route del 10.10.20.0/24 via 192.168.50.100 - удалить маршрут.
ip route add default via 192.168.50.100 - создать маршрут по умолчанию.
ip route add 10.10.20.0/24 dev eth0 - создать маршрут к указной сети.
ip route add table nnn 10.10.20.0/24 dev eth0 - создать маршрут в специальной таблице роутинга.
ip route add blackhole 10.10.20.0/24 dev eth0 - создать blackhole маршрут.
ip route add unreachable 10.10.20.0/24 dev eth0 - создать unreachable маршрут.